<<<<<<< HEAD
// See: https://github.com/facebook/metro/blob/v0.82.0/packages/metro-resolver/src/index.js

export type {
  AssetFileResolution,
  CustomResolutionContext,
  CustomResolver,
  CustomResolverOptions,
  DoesFileExist,
  FileAndDirCandidates,
  FileCandidates,
  FileResolution,
  FileSystemLookup,
  ResolutionContext,
  Resolution,
  ResolveAsset,
  Result,
} from './types';

// NOTE(cedric): the flow translation API can't resolve types when using inline requires in object properties
export { default as FailedToResolveNameError } from './errors/FailedToResolveNameError';
export { default as FailedToResolvePathError } from './errors/FailedToResolvePathError';
export { default as FailedToResolveUnsupportedError } from './errors/FailedToResolveUnsupportedError'
export { default as formatFileCandidates } from './errors/formatFileCandidates';
export { default as InvalidPackageError } from './errors/InvalidPackageError';
export { default as resolve } from './resolve';
=======
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 *
 * @format
 * @oncall react_native
 */

export type { AssetFileResolution, CustomResolutionContext, CustomResolver, CustomResolverOptions, DoesFileExist, FileAndDirCandidates, FileCandidates, FileResolution, FileSystemLookup, ResolutionContext, Resolution, ResolveAsset, Result } from "./types";
export { default as FailedToResolveNameError } from "./errors/FailedToResolveNameError";
export { default as FailedToResolvePathError } from "./errors/FailedToResolvePathError";
export { default as FailedToResolveUnsupportedError } from "./errors/FailedToResolveUnsupportedError";
export { default as formatFileCandidates } from "./errors/formatFileCandidates";
export { default as InvalidPackageError } from "./errors/InvalidPackageError";
export { default as resolve } from "./resolve";
>>>>>>> a3c71b8778a2ba2f7774a4d536795c7da9642dd4
